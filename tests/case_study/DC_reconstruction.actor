actor Broadcast int(size=12) X ==> int(size=12) Y1, int(size=12) Y2:
  action X:[t] ==> Y1:[t], Y2:[t] end
end

network DC_Reconstruction()
  int(size=12) BTYPE, int(size=13) QFS_DC, int(size=6) QP
  ==>
  int(size=13) QF_DC, 
  int(size=11) PTR, 
  int(size=3) AC_PRED_DIR ,
  int(size=3) MODE, 
  bool SIGNED, 
  int(size=6) QUANT :
  
  
  StartMode:
  contract BTYPE:3 ==> AC_PRED_DIR:1
    guard (BTYPE[@] & NEWVOP) != 0x000
    ensures AC_PRED_DIR[@] = -int(2,3)
  end
	
  InterMode:
  contract BTYPE:1, QP:1, QFS_DC:1
      ==> QF_DC:1, PTR:1, AC_PRED_DIR:1, MODE:1, SIGNED:1, QUANT:1
		
    guard (BTYPE[@] & NEWVOP) = 0x000
    guard (BTYPE[@] & INTRA) = 0x000
    guard (BTYPE[@] & INTER) != 0x000 && (BTYPE[@] & ACCODED) != 0x000
    ensures AC_PRED_DIR[@] = int(0,3)
	ensures MODE[@] = int(0,3)
  end
  
  IntraMode:
  contract BTYPE:1, QP:1, QFS_DC:1
      ==> QF_DC:1, PTR:1, AC_PRED_DIR:1, MODE:1, SIGNED:1, QUANT:1
      
    guard (BTYPE[@] & NEWVOP) = 0x000
    guard (BTYPE[@] & INTER) = 0x000
    guard (BTYPE[@] & INTRA) != 0x000
    ensures int(0,3) <= AC_PRED_DIR[@] && AC_PRED_DIR[@] <= int(2,3)
	ensures int(0,3) <= MODE[@] && MODE[@] <= int(2,3)
  end
	
  OtherMode:
  contract BTYPE:1, QP:1 ==> AC_PRED_DIR:1
    guard (BTYPE[@] & NEWVOP) = 0x000
    //guard (BTYPE[@] & INTER) = 0x000
    guard (BTYPE[@] & INTRA) = 0x000
    guard (BTYPE[@] & ACCODED) = 0x000
    ensures AC_PRED_DIR[@] = -int(1,3)
  end
  
  
  // ================ Start ================
  chinvariant mode(StartMode) ==> rd@(ch_BTYPE_ip) = 0 || rd@(ch_BTYPE_ip) = 3
  chinvariant mode(StartMode) ==> rd@(ch_BTYPE_ad) = 0 || rd@(ch_BTYPE_ad) = 3
  
  chinvariant mode(StartMode) && tot@(BTYPE) > 0 ==> (BTYPE[@] & NEWVOP) != 0x000
  chinvariant mode(StartMode) ==> 
  	tot@(QFS_DC) = 0 && tot@(QP) = 0 && tot@(QF_DC) = 0 && tot@(PTR) = 0 && tot@(MODE) = 0 && tot@(SIGNED) = 0 && tot@(QUANT) = 0 &&
  	tot@(ch_A) = 0 && tot@(ch_B) = 0 && tot@(ch_C) = 0
  chinvariant mode(StartMode) ==>  3 * tot@(AC_PRED_DIR) = rd@(ch_BTYPE_ip)
  
  chinvariant mode(StartMode) && tot@(AC_PRED_DIR) > 0 ==> AC_PRED_DIR[@] = -int(2,3) 
  
  // ================ Inter ================
  chinvariant mode(InterMode) && tot@(BTYPE) > 0 ==> 
    (BTYPE[@] & NEWVOP) = 0x000 && (BTYPE[@] & INTER) != 0x000 && (BTYPE[@] & ACCODED) != 0x000 && (BTYPE[@] & INTRA) = 0x000
  
  chinvariant mode(InterMode) ==>  
    rd@(ch_BTYPE_ip) = rd@(QFS_DC) &&
    rd@(ch_BTYPE_ip) = rd@(QP)
  
  chinvariant mode(InterMode) ==>
    tot@(ch_A) = 0 && tot@(ch_B) = 0 && tot@(ch_C) = 0
  
  chinvariant mode(InterMode) ==>  
    rd@(ch_BTYPE_ip) = tot@(AC_PRED_DIR) && 
    rd@(ch_BTYPE_ip) = tot@(QF_DC) && 
    rd@(ch_BTYPE_ip) = tot@(PTR) && 
    rd@(ch_BTYPE_ip) = tot@(MODE) && 
    rd@(ch_BTYPE_ip) = tot@(SIGNED) &&
    rd@(ch_BTYPE_ip) = tot@(QUANT)
    
  chinvariant mode(InterMode) && tot@(AC_PRED_DIR) > 0 ==> AC_PRED_DIR[@] = int(0,3) && AC_PRED_DIR[@] = MODE[@]
    
  
  // ================ Intra ================
  chinvariant mode(IntraMode) && tot@(BTYPE) > 0 ==> 
    (BTYPE[@] & NEWVOP) = 0x000 && (BTYPE[@] & INTER) = 0x000 && (BTYPE[@] & INTRA) != 0x000
  
  chinvariant mode(IntraMode) ==>  
    rd@(ch_BTYPE_ip) = rd@(QFS_DC) &&
    rd@(ch_BTYPE_ip) = rd@(QP) &&
    rd@(ch_BTYPE_ip) = rd@(ch_A) &&
    rd@(ch_BTYPE_ip) = rd@(ch_B) &&
    rd@(ch_BTYPE_ip) = rd@(ch_C)
  
  chinvariant mode(IntraMode) ==>
    tot@(ch_A) = rd@(ch_BTYPE_ad) && tot@(ch_B) = rd@(ch_BTYPE_ad) && tot@(ch_C) = rd@(ch_BTYPE_ad)
  
  chinvariant mode(IntraMode) ==>  
    rd@(ch_BTYPE_ip) = tot@(AC_PRED_DIR) && 
    rd@(ch_BTYPE_ip) = tot@(QF_DC) && 
    rd@(ch_BTYPE_ip) = tot@(PTR) && 
    rd@(ch_BTYPE_ip) = tot@(MODE) && 
    rd@(ch_BTYPE_ip) = tot@(SIGNED) &&
    rd@(ch_BTYPE_ip) = tot@(QUANT)
  
  chinvariant mode(IntraMode) && tot@(AC_PRED_DIR) > 0 ==> int(0,3) <= AC_PRED_DIR[@] && AC_PRED_DIR[@] <= int(2,3)
  chinvariant mode(IntraMode) && tot@(MODE) > 0 ==> int(0,3) <= MODE[@] && MODE[@] <= int(2,3)
  
  // ================ Other ================
  chinvariant mode(OtherMode) && tot@(BTYPE) > 0 ==> 
    (BTYPE[@] & NEWVOP) = 0x000 && (BTYPE[@] & ACCODED) = 0x000 && (BTYPE[@] & INTRA) = 0x000
  
  chinvariant mode(OtherMode) ==>  
    tot@(QFS_DC) = 0 &&
    rd@(ch_BTYPE_ip) = rd@(QP)
  
  chinvariant mode(OtherMode) ==>
    tot@(ch_A) = 0 && tot@(ch_B) = 0 && tot@(ch_C) = 0
  
  chinvariant mode(OtherMode) ==>  
    rd@(ch_BTYPE_ip) = tot@(AC_PRED_DIR) && 
    0 = tot@(QF_DC) && 
    0 = tot@(PTR) && 
    0 = tot@(MODE) && 
    0 = tot@(SIGNED) &&
    0 = tot@(QUANT)
  
  chinvariant mode(OtherMode) && tot@(AC_PRED_DIR) > 0 ==> AC_PRED_DIR[@] = -int(1,3) 
  
  entities
    broadcast = Broadcast();
    addressing = Addressing_simple();
    invpred = Algo_DCRinvpred();
  end
  
  structure
    ch_BTYPE_in: BTYPE --> broadcast.X;
    ch_QFS_DC: QFS_DC --> invpred.QFS_DC;
    ch_QP: QP --> invpred.QP;
    ch_BTYPE_ip: broadcast.Y1 --> invpred.BTYPE;
    ch_BTYPE_ad: broadcast.Y2 --> addressing.BTYPE;
    ch_A: addressing.A --> invpred.A;
    ch_B: addressing.B --> invpred.B;
    ch_C: addressing.C --> invpred.C;
    ch_QF_DC: invpred.QF_DC --> QF_DC;
    ch_PTR: invpred.PTR --> PTR;
    ch_AC_PRED_DIR: invpred.AC_PRED_DIR --> AC_PRED_DIR;
    ch_MODE: invpred.MODE --> MODE;
    ch_SIGNED: invpred.SIGNED --> SIGNED;
    ch_QUANT: invpred.QUANT --> QUANT;
  end
  
end