network Decoder 
  int(size=12) BTYPE, int(size=13) QFS, int(size=6) QP, int(size=9) MV ==> int(size=9) VID:
  
  NewVop: contract BTYPE:3 ==>
    guard (BTYPE[@] & NEWVOP) != int(0,12)
  end
  
  TexOnly: contract BTYPE:1, QP:1, QFS:64 ==> VID:64
    guard (BTYPE[@] & NEWVOP) = int(0,12)
    guard (BTYPE[@] & INTRA) != int(0,12)
    guard (BTYPE[@] & INTER) = int(0,12)
  end
  
  MotionOnlyVec: contract BTYPE:1, MV:2, QP:1 ==> VID:64
    guard (BTYPE[@] & NEWVOP) = int(0,12)
    guard (BTYPE[@] & INTRA) = int(0,12)
    guard (BTYPE[@] & INTER) != int(0,12)
    guard (BTYPE[@] & ACCODED) = int(0,12)
    guard (BTYPE[@] & MOTION) != int(0,12)
  end
  
  MotionTexVec: contract BTYPE:1, MV:2, QP:1, QFS:64 ==> VID:64
    guard (BTYPE[@] & NEWVOP) = int(0,12)
    guard (BTYPE[@] & INTRA) = int(0,12)
    guard (BTYPE[@] & INTER) != int(0,12)
    guard (BTYPE[@] & ACCODED) != int(0,12)
    guard (BTYPE[@] & MOTION) != int(0,12)
  end
  
  MotionOnlyNoVec: contract BTYPE:1, QP:1 ==> VID:64
    guard (BTYPE[@] & NEWVOP) = int(0,12)
    guard (BTYPE[@] & INTRA) = int(0,12)
    guard (BTYPE[@] & INTER) != int(0,12)
    guard (BTYPE[@] & ACCODED) = int(0,12)
    guard (BTYPE[@] & MOTION) = int(0,12)
  end
  
  MotionTexNoVec: contract BTYPE:1, QP:1, QFS:64 ==> VID:64
    guard (BTYPE[@] & NEWVOP) = int(0,12)
    guard (BTYPE[@] & INTRA) = int(0,12)
    guard (BTYPE[@] & INTER) != int(0,12)
    guard (BTYPE[@] & ACCODED) != int(0,12)
    guard (BTYPE[@] & MOTION) = int(0,12)
  end
  
  entities
    bc = Broadcast();
    tex = Texture();
    mot = Motion();
  end

  structure
    cBTYPE: BTYPE --> bc.X;
    cBTYPE_tex: bc.Y1 --> tex.BTYPE;
    cBTYPE_mot: bc.Y2 --> mot.BTYPE;
    cQFS: QFS --> tex.QFS;
    cQP: QP --> tex.QP;
    cMV: MV --> mot.MV;
    cTEX: tex.F --> mot.TEX;
    cVID_out: mot.VID --> VID;
  end

end