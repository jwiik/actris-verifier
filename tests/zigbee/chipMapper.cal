actor chipMapper()
// Inputs:
bv(size=8) data              // header and payload data samples as 8-bit unsigned
                                     // each sample contains two 4-bit symbols
// Outputs:
==> bv(size=32) chip          // packets of 32 chips
:
	                                 // 32-bit Pseudo-Noise (PN) sequence values
	/*Map(bv(size=8) -> bv(size=32)) Chip_map_table;*/
								/*[
								 0x744ac39b, 0x44ac39b7, 0x4ac39b74, 0xac39b744,
								 0xc39b744a, 0x39b744ac, 0x9b744ac3, 0xb744ac39,
								 0xdee06931, 0xee06931d, 0xe06931de, 0x6931dee,
								 0x6931dee0, 0x931dee06, 0x31dee069, 0x1dee0693];*/
	/*function Chip_map_table(bv(size=8) in) --> bv(size=32): 0x744ac39b end*/
	
	Map(bv(size=8) -> bv(size=32)) Chip_map_table;
	
	bv(size=8) lsn;
	bv(size=8) msn;
	
	// acquire a data sample and transmit two chip packets
	action data:[ data_in ] ==> chip:[ Chip_map_table[lsn], Chip_map_table[msn] ]
	do
        lsn := data_in & 0x0F;
        msn := (data_in >> 0x04) & 0x0F;
	end

end