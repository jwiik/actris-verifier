@sdf
actor Add int in1, int in2 ==> int out :
  action in1:[i], in2:[j] ==> out:[i+j] end
end

@sdf
actor Delay(int k) int in ==> int out :
  initialize ==> out:[k] end
  action in:[i] ==> out:[i] end
end

network Net int in ==> int out :
  
  //spec in:[x1,x2] ==> out:[y]
    //requires 0 <= x1 && 0 <= x2
    // (forall i1, i2 :: i1 % 2 = 0 && i2 = i1+1 ==> 0 <= in[i1] && 0 <= in[i2])
  //end
  
  action in:[x] ==> out:[y] 
    requires 0 < x
    ensures y = prev(c)+x || y = x
  end
  
  invariant tokens(b,1)
  invariant next(b) = prev(c) || next(b) = 0
  
  chinvariant b[0] = c[-1] || b[0] = 0
  
  entities
    add = Add();
    del = Delay(0);
  end
  
  structure
    a: in --> add.in1;
    b: del.out --> add.in2;
    c: add.out --> out;
    d: add.out --> del.in;
  end

end