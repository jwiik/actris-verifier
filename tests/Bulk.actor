@static
actor AddSeq int in ==> int out :
  action in:[i,j] ==> out:[i+j] end
end

@static
actor Div(int c) int in ==> int out :
  action in:[i] ==> out:[i/c] end
end

network SumDiv2 int in ==> int out :
  
  action in:32 ==> out:16
    requires (forall int i :: current(in,i)  ==> in[i]%2 = 1)
    ensures  (forall int i :: current(out,i) ==> 2*out[i] = in[2*i]+in[2*i+1])
  end
  
  entities
    add = AddSeq();
    div = Div(2);
  end
  
  structure
    in --> add.in;
    add.out --> div.in;
    div.out --> out;
  end
  
end