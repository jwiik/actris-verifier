//@sdf
actor Repeater int in ==> int out :
  action in:[i] ==> out:[i] end
end

actor Split int in ==> int pos, int neg :
  action in:[i] ==> pos:[i] 
    guard 0 <= i
  end
  action in:[i] ==> neg:[i] 
    guard i < 0
  end
end

network Net int in ==> int out1, int out2 :

  action in:1 ==> out1:1
    requires in[@] = 1
    ensures out1[@] = 1
  end
  
  action in:1 ==> out2:1
    requires in[@] = -1
    ensures out2[@] = -1
  end
    
  chinvariant @(a) = @(b)
  chinvariant @(b) = @(c)+@(d)
  chinvariant tot(b) = rd(a)
  chinvariant rd(b) = tot(d)+tot(c)
  
  chinvariant tot(b) > 0 ==> a[@] = b[@]
  
  chinvariant (forall int i :: current(a,i) ==> a[i] = -1) || (forall int i :: current(a,i) ==> a[i] = 1)
  chinvariant (forall int i :: current(b,i) ==> a[i] = b[i])
  chinvariant (forall int i :: current(a,i) ==> a[i] = 1) ==> tot(d) = 0
  chinvariant (forall int i :: current(a,i) ==> a[i] = -1) ==> tot(c) = 0
    
  chinvariant rd(b) > 0 && b[@] < 0 ==> d[@] = b[@]
  chinvariant rd(b) > 0 && b[@] >= 0 ==> c[@] = b[@]
  
  entities
    rep = Repeater();
    split = Split();
  end
  
  structure
    a: in --> rep.in;
    b: rep.out --> split.in;
    c: split.pos --> out1;
    d: split.neg --> out2;
  end

end